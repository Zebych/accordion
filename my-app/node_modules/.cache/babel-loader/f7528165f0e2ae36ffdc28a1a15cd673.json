{"ast":null,"code":"var _jsxFileName = \"E:\\\\incubator\\\\accordionGit\\\\my-app\\\\src\\\\button\\\\Button.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = props => {\n  _s();\n\n  const [buttonState, setButtonState] = useState(true);\n  const onStyle = {\n    width: '30px',\n    height: '20px',\n    border: '1px solid black',\n    marginLeft: '5px',\n    display: 'inline-block',\n    padding: '2px',\n    backgroundColor: props.on ? 'green' : 'white'\n  };\n  const ofStyle = {\n    width: '30px',\n    height: '20px',\n    border: '1px solid black',\n    marginLeft: '5px',\n    display: 'inline-block',\n    padding: '2px',\n    backgroundColor: props.on ? 'white' : 'red'\n  };\n  const indicatorStyle = {\n    display: 'inline-block',\n    width: '10px',\n    height: '10px',\n    borderRadius: '5px',\n    border: '1px solid black',\n    marginLeft: '5px',\n    backgroundColor: props.on ? 'green' : 'red'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: onStyle,\n      children: \"on\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: ofStyle,\n      children: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: indicatorStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Button, \"u/ctRVhI2jmgvc98qYY8ktIcpJU=\");\n\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["E:/incubator/accordionGit/my-app/src/button/Button.tsx"],"names":["React","useState","Button","props","buttonState","setButtonState","onStyle","width","height","border","marginLeft","display","padding","backgroundColor","on","ofStyle","indicatorStyle","borderRadius"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAMA,OAAO,MAAMC,MAA2B,GAAIC,KAAD,IAAW;AAAA;;AAClD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMK,OAAO,GAAC;AACVC,IAAAA,KAAK,EAAE,MADG;AAEVC,IAAAA,MAAM,EAAE,MAFE;AAGVC,IAAAA,MAAM,EAAE,iBAHE;AAIVC,IAAAA,UAAU,EAAE,KAJF;AAKVC,IAAAA,OAAO,EAAC,cALE;AAMVC,IAAAA,OAAO,EAAC,KANE;AAOVC,IAAAA,eAAe,EAAEV,KAAK,CAACW,EAAN,GAAW,OAAX,GAAqB;AAP5B,GAAd;AASA,QAAMC,OAAO,GAAC;AACVR,IAAAA,KAAK,EAAE,MADG;AAEVC,IAAAA,MAAM,EAAE,MAFE;AAGVC,IAAAA,MAAM,EAAE,iBAHE;AAIVC,IAAAA,UAAU,EAAE,KAJF;AAKVC,IAAAA,OAAO,EAAC,cALE;AAMVC,IAAAA,OAAO,EAAC,KANE;AAOVC,IAAAA,eAAe,EAAEV,KAAK,CAACW,EAAN,GAAW,OAAX,GAAqB;AAP5B,GAAd;AASA,QAAME,cAAc,GAAG;AACnBL,IAAAA,OAAO,EAAC,cADW;AAEnBJ,IAAAA,KAAK,EAAE,MAFY;AAGnBC,IAAAA,MAAM,EAAE,MAHW;AAInBS,IAAAA,YAAY,EAAE,KAJK;AAKnBR,IAAAA,MAAM,EAAE,iBALW;AAMnBC,IAAAA,UAAU,EAAE,KANO;AAOnBG,IAAAA,eAAe,EAAEV,KAAK,CAACW,EAAN,GAAW,OAAX,GAAqB;AAPnB,GAAvB;AAUA,sBACI;AAAA,4BACI;AAAK,MAAA,KAAK,EAAER,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAES,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,KAAK,EAAEC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CArCM;;GAAMd,M;;KAAAA,M","sourcesContent":["import React, {useState} from 'react';\r\n\r\ntype PropsType = {\r\n    on: boolean\r\n}\r\n\r\nexport const Button: React.FC<PropsType> = (props) => {\r\n    const [buttonState, setButtonState] = useState(true)\r\n    const onStyle={\r\n        width: '30px',\r\n        height: '20px',\r\n        border: '1px solid black',\r\n        marginLeft: '5px',\r\n        display:'inline-block',\r\n        padding:'2px',\r\n        backgroundColor: props.on ? 'green' : 'white'\r\n    }\r\n    const ofStyle={\r\n        width: '30px',\r\n        height: '20px',\r\n        border: '1px solid black',\r\n        marginLeft: '5px',\r\n        display:'inline-block',\r\n        padding:'2px',\r\n        backgroundColor: props.on ? 'white' : 'red'\r\n    }\r\n    const indicatorStyle = {\r\n        display:'inline-block',\r\n        width: '10px',\r\n        height: '10px',\r\n        borderRadius: '5px',\r\n        border: '1px solid black',\r\n        marginLeft: '5px',\r\n        backgroundColor: props.on ? 'green' : 'red'\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={onStyle}>on</div>\r\n            <div style={ofStyle}>off</div>\r\n            <div style={indicatorStyle}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}